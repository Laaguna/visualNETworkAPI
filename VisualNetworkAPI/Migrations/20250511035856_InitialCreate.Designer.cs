// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisualNetworkAPI.Models;

#nullable disable

namespace VisualNetworkAPI.Migrations
{
    [DbContext(typeof(VisualNetworkContext))]
    [Migration("20250511035856_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VisualNetworkAPI.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<string>("Decoration")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("decoration");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.HasKey("Id")
                        .HasName("PK__Board__3213E83F1704428E");

                    b.ToTable("Board", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.BoardPost", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int")
                        .HasColumnName("boardId");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.HasKey("BoardId", "PostId")
                        .HasName("PK__board_po__F0520DA994AF1A14");

                    b.HasIndex("PostId");

                    b.ToTable("board_post", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.HasKey("Id")
                        .HasName("PK__Comments__3213E83F261FFB70");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Follower", b =>
                {
                    b.Property<int>("FollowerId")
                        .HasColumnType("int")
                        .HasColumnName("Follower_id");

                    b.Property<int>("FollowedId")
                        .HasColumnType("int")
                        .HasColumnName("Followed_id");

                    b.Property<DateTime?>("FollowDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Follow_date");

                    b.HasKey("FollowerId", "FollowedId")
                        .HasName("PK__Follower__950CECCBC964DD5D");

                    b.HasIndex("FollowedId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.LikePost", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.HasKey("UserId", "PostId")
                        .HasName("PK__like_pos__764ADBC6056A024B");

                    b.HasIndex("PostId");

                    b.ToTable("like_post", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imageUrls");

                    b.Property<string>("JsonPersonalizacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Json_personalizacion");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Post__3213E83F3D1A0E2F");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tagId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.HasKey("PostId", "TagId")
                        .HasName("PK__post_tag__B803B38F98462B94");

                    b.HasIndex("TagId");

                    b.ToTable("post_tag", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("device_info");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiry_date");

                    b.Property<string>("ReplacedByToken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("replaced_by_token");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("revoked_at");

                    b.Property<string>("SessionId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("session_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__RefreshT__3213E83F58BFF9A9");

                    b.HasIndex(new[] { "ExpiryDate" }, "IX_RefreshTokens_ExpiryDate");

                    b.HasIndex(new[] { "Token" }, "IX_RefreshTokens_Token");

                    b.HasIndex(new[] { "UserId" }, "IX_RefreshTokens_UserId");

                    b.HasIndex(new[] { "Token" }, "UQ__RefreshT__CA90DA7A7577ACF1")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Created_date");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("Last_update");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK__Tag__3213E83F8BB67BCC");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<DateOnly?>("DateBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("Genre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("genre");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime")
                        .HasColumnName("last_update");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone");

                    b.Property<string>("User1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user");

                    b.HasKey("Id")
                        .HasName("PK__user__3213E83FDA174AEF");

                    b.HasIndex(new[] { "Email" }, "IX_User_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__user__AB6E616479AEDB59")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.BoardPost", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.Board", "Board")
                        .WithMany("BoardPosts")
                        .HasForeignKey("BoardId")
                        .IsRequired()
                        .HasConstraintName("FK__board_pos__board__4F7CD00D");

                    b.HasOne("VisualNetworkAPI.Models.Post", "Post")
                        .WithMany("BoardPosts")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__board_pos__postI__5070F446");

                    b.Navigation("Board");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Comment", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__postId__44FF419A");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Follower", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.User", "Followed")
                        .WithMany("FollowerFolloweds")
                        .HasForeignKey("FollowedId")
                        .IsRequired()
                        .HasConstraintName("FK__Followers__Follo__3B75D760");

                    b.HasOne("VisualNetworkAPI.Models.User", "FollowerNavigation")
                        .WithMany("FollowerFollowerNavigations")
                        .HasForeignKey("FollowerId")
                        .IsRequired()
                        .HasConstraintName("FK__Followers__Follo__3A81B327");

                    b.Navigation("Followed");

                    b.Navigation("FollowerNavigation");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.LikePost", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.Post", "Post")
                        .WithMany("LikePosts")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__like_post__postI__4222D4EF");

                    b.HasOne("VisualNetworkAPI.Models.User", "User")
                        .WithMany("LikePosts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__like_post__userI__412EB0B6");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Post", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.User", "CreatedByNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Post__Created_by__3E52440B");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.PostTag", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__post_tag__postId__49C3F6B7");

                    b.HasOne("VisualNetworkAPI.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK__post_tag__tagId__4AB81AF0");

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.RefreshToken", b =>
                {
                    b.HasOne("VisualNetworkAPI.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RefreshTo__user___5629CD9C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Board", b =>
                {
                    b.Navigation("BoardPosts");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Post", b =>
                {
                    b.Navigation("BoardPosts");

                    b.Navigation("Comments");

                    b.Navigation("LikePosts");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.Tag", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("VisualNetworkAPI.Models.User", b =>
                {
                    b.Navigation("FollowerFolloweds");

                    b.Navigation("FollowerFollowerNavigations");

                    b.Navigation("LikePosts");

                    b.Navigation("Posts");

                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
